name: Spring Boot CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  start-services:
    name: Start Services
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Install Docker Compose
        run: |
          echo "Installing Docker Compose"
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Debug - List directory contents
        run: |
          echo "Listing directory contents for debugging"
          ls -la
          echo "Checking for docker-compose.yml"
          ls -la ./BackEndFilmes # Update this path if needed

      - name: Set up Docker Compose
        run: |
          echo "Setting up Docker Compose"
          docker-compose -f ./BackEndFilmes/brunao/docker-compose.yml up -d
          echo "Waiting for WireMock to start"
          for i in {1..30}; do
            if curl --fail http://localhost:8091/__admin/mappings; then
              echo "WireMock is up and running"
              break
            fi
            echo "Waiting for WireMock..."
            sleep 5
          done

      - name: Start Spring Boot application
        run: |
          echo "Starting the Spring Boot application"
          cd BackEndFilmes/brunao
          mvn spring-boot:start &
          echo "Waiting for the Spring Boot application to start"
          for i in {1..30}; do
            if curl --fail http://localhost:8080/actuator/health; then
              echo "Spring Boot application is up and running"
              break
            fi
            echo "Waiting for Spring Boot application..."
            sleep 5
          done

  test-job:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: start-services
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: List directory contents for debugging
        run: |
          echo "Listing directory contents for debugging"
          ls -la

      - name: Install project dependencies
        run: |
          echo "Installing project dependencies"
          cd BackEndFilmes/brunao
          mvn clean install -DskipTests

      - name: Run tests
        run: |
          echo "Running tests"
          cd BackEndFilmes/brunao
          mvn test -Denv=homolog

      - name: Upload test artifacts
        uses: actions/upload-artifact@v3
        with:
          name: test-reports
          path: |
            BackEndFilmes/brunao/target/report.html
            BackEndFilmes/brunao/target/report.json